helm-common-team-rnd:
  environment: testing
  # .Release.Name = your-service-name-testing
  replicaCount: 1
  image:
    repository: danhnt/test-project-testing
    tag: 1.0.1

  containers:
    - name: "service"
      enable: true 
      script: "./scripts/run_service.sh"  
      metric_port: 8000
    - name: "consumer"
      enable: true
      script: "./scripts/run_consumer.sh"

  service:
    type: ClusterIP
    port: 5000

  podAnnotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '8000'

  persistence:
    ## pvc name default: .Release.Name = your-service-name-testing
    enabled: true
    storageClass: "nfs-client"
    accessModes:
      - ReadWriteMany
    size: 8Gi

  volumes:
    - name: pvc-store
      persistentVolumeClaim:
        claimName: test-project ## pvc name default: .Release.Name = your-service-name-testing

  volumeMounts:
    - name: pvc-store
      mountPath: /logs/news_classification

  envVariablesServices:
    redis:
      - enable: true
        envHost: REDIS_HOST
        envPort: REDIS_PORT
        envDatabase: REDIS_DB
        envPassword: REDIS_PASSWORD
    rabbitmq:
      - enable: true
        envHost: RABBIT_MQ_HOST
        envPort: RABBIT_MQ_PORT
        envUser: RABBIT_MQ_USERNAME
        envPassword: RABBIT_MQ_PASSWORD
        account:
          key_username: my-rnd-username
          key_password: my-rnd-password
    mysql:
      - enable: false
        envHost: MYSQL_HOST
        envPort: MYSQL_PORT
        envUser: MYSQL_USERNAME
        envPassword: MYSQL_PASSWORD
        account:
          key_username: service-username
          key_password: service-password
    mongo:
      - enable: true
        envHost: MONGODB_HOST
        envPort: MONGODB_PORT
        envUser: MONGODB_USERNAME
        envPassword: MONGODB_PASSWORD
        account:
          key_username: my-rnd-username
          key_password: my-rnd-password
    kafka:
      enable: false
    solr_master: 
      - enable: false
        envHost: SOLR_MASTER_HOST
        envPort: SOLR_MASTER_PORT
        envUser: SOLR_MASTER_USERNAME
        envPassword: SOLR_MASTER_PASSWORD
        account:
          key_username: service-username
          key_password: service-password
    solr_topic:
      - enable: false
        envHost: SOLR_TOPIC_HOST
        envPort: SOLR_TOPIC_PORT
        envUser: SOLR_TOPIC_USERNAME
        envPassword: SOLR_TOPIC_PASSWORD
        account:
          key_username: service-username
          key_password: service-password

  cluster: "ovh" ### Deploy to "k8s-ovh | k8s-local"

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: kong
    paths: [ '/' ]
    hostProduction:
      - test-project.example.com
    hostTesting: 
      - test-project.datatrend.io
    hostStaging: 
      - test-project.example.com


  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  nodeSelector: 
    node-type: "rnd"

  tolerations:
    - key: node-type
      value: rnd
      effect: NoSchedule
    # - operator: Exists
    #   effect: NoSchedule
    # - operator: Exists
    #   effect: NoExecute
  affinity: {}


  workload:
    # -- kind of workload, support Deployment/StatefulSet
    kind: Deployment

  # config variables deploy
  envVariables:
    TEST_TEST: "test-test"